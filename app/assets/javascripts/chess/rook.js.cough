{ black, rook, white }       = require './constants'
{ defaults }                 = require './base-helpers'
{ fileOf, rank_&_file_from } = require './extractors'
sliderFns                    = require './slider'

# When a rook is captured, does this code still allow a king to castle?

KQk = 'KQk'
KQq = 'KQq'
Kkq = 'Kkq'
Qkq = 'Qkq'
KQ  = 'KQ'
Kk  = 'Kk'
Kq  = 'Kq'
Qk  = 'Qk'
Qq  = 'Qq'
kq  = 'kq'
K   = 'K'
Q   = 'Q'
k   = 'k'
q   = 'q'
NO  = '-'

newCastlingRts = {}

newCastlingRts[white] =
  kingside :
    KQkq : Qkq, KQk : Qk, KQq : Qq, KQ  : Q
    Kkq  : kq,  Kk  : k,  Kq  : q,  K   : NO
    Qkq  : Qkq, Qk  : Qk, Qq  : Qq, Q   : Q
    kq   : kq,  k   : k,  q   : q,  '-' : NO
  queenside :
    KQkq : Kkq, KQk : Kk, KQq : Kq, KQ  : K
    Kkq : Kkq,  Kk  : Kk, Kq  : Kq, K   : K
    Qkq : kq,   Qk  : k,  Qq  : q,  Q   : NO
    kq  : kq,   k   : k,  q   : q,  '-' : NO

newCastlingRts[black] =
  kingside :
    KQkq : KQq, Qkq : Qq, Kkq : Kq, kq  : q
    KQq  : KQq, Qq  : Qq, Kq  : Kq, q   : q
    KQk  : KQ,  Qk  : Q,  Kk  : K,  k   : NO
    KQ   : KQ,  Q   : Q,  K   : K,  '-' : NO 
  queenside :
    KQkq : KQk, Qkq : Qk, Kkq : Kk, kq  : k
    KQk  : KQk, Qk  : Qk, Kk  : Kk, k   : k
    KQq  : KQ,  Qq  : Q,  Kq  : K,  q   : NO
    KQ   : KQ,  Q   : Q,  K   : K,  '-' : NO 

kingside? = \src ->
  fileOf src >= 4

modifyCastlingRights = (rts, src) ->
  [srcRank, srcFile] = rank_&_file_from src
  rookColor = if srcRank == 0 then black else white
  side = whichSide? src

  newCastlingRts[rookColor][side][rts]

whichSide? = \src ->
  if kingside? src then 'kingside' else 'queenside'

# ----------------
# Mixin : Slider
# ----------------

rookFns = defaults sliderFns { modifyCastlingRights }

# --------------------------
# Override mixin functions.
# --------------------------

rookFns.getPotentialMoves =
  do (getPotentialMoves = rookFns.getPotentialMoves) ->
    (bd, src) ->
      getPotentialMoves (bd, src, undefined, undefined, rook)

rookFns.getPotentialKingAttacks =
  do (getPotentialKingAttacks = rookFns.getPotentialKingAttacks) ->
    (bd, src) ->
      getPotentialKingAttacks (bd, src, rook)

module.exports = rookFns

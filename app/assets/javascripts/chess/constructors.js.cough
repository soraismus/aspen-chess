{ black? }  = require './types'
{ toWhite } = require './base-helpers'

{
  bishop
  blackBishop
  blackKing
  blackKnight
  blackPawn
  blackQueen
  blackRook
  king
  knight
  pawn
  queen
  rook
} = require './constants'

blackChessmanFrom = {}
blackChessmanFrom[king  ] = blackKing
blackChessmanFrom[queen ] = blackQueen
blackChessmanFrom[rook  ] = blackRook
blackChessmanFrom[bishop] = blackBishop
blackChessmanFrom[knight] = blackKnight
blackChessmanFrom[pawn  ] = blackPawn

generateChessman = (chessmanType, color) ->
  blackChessman = blackChessmanFrom[chessmanType]
  if (black? color) then blackChessman else (toWhite blackChessman)

generateContext =
  (board, player, castlingRights, passantPosition, clock, moveNumber) ->
    { board, player, castlingRights, passantPosition, clock, moveNumber }

generatePosition = (rank, file) ->
  generatePosition! (rank, file)

generatePosition! = (rank, file) ->
  [rank, file]

constructors = {
  generateChessman
  generateContext
  generatePosition
  generatePosition!
} 

module.exports = constructors

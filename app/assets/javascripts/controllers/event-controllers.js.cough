{ appStateProperty }              = require '../application/aspen'
{ doAsync }                       = require('pando').utilities
{ getComponent, updateComponent } = require '../utilities/lens_utilities'
{ mapping }                       = require('pando').transforms
{ deleting, posting }             = require './ajax'

{ connect
  getProperty
  onValue
  plugIntoTerminus
} = require '../application/controller'

encodeCsrfData = ({ param, token }) ->
  setField (param, token)

setField = (field, val) ->
  "#{field}=#{encodeURIComponent val}"

# Eventually: `mapping ('.main.csrf')`
# instead of: `mapping (getComponent '.main.csrf')`.
connect appStateProperty, 'csrf', ->
  ; mapping (getComponent '.main.csrf') mapping (encodeCsrfData) ;

# -------------------------------------------------------------------------
encodeFormData = \properties ->
  properties.join '&'

getAjaxProps = (path, data) ->
  { path, data }

_getLoginFields = ([csrf, loginEmail, loginPassword]) ->
  [
    csrf
    setField ('email', loginEmail)
    setField ('password', loginPassword)
  ]

_getLoginData = (loginProperties...) ->
  encodeFormData (_getLoginFields loginProperties)

getLoginData = ->
  doAsync _getLoginData loginProperties...

getLoginPostProperties = ->
  doAsync getAjaxProps ('/login', getLoginData ())

resetAppStateFromAjaxResponse = \capsule \appState ->
  JSON.parse capsule.target.response

loginProperties =
  ['csrf', 'LoginEmail', 'LoginPassword'].map getProperty

connect '$login-email-changes', 'LoginEmail', ->
  mapping (getComponent '.event.target.value')

connect '$login-password-changes', 'LoginPassword', ->
  mapping (getComponent '.event.target.value')

connect '$login-form-submits', '$ajax-returns', ->
  ; mapping (getLoginPostProperties) posting ;

plugIntoTerminus '$ajax-returns', ->
  mapping resetAppStateFromAjaxResponse 

# -------------------------------------------------------------------------
csrf = getProperty 'csrf'

getLogoutDeleteProperties = ->
  doAsync getAjaxProps ('/logout', csrf)

connect '$logout-clicks', '$ajax-returns', ->
  ; mapping (getLogoutDeleteProperties) deleting ;

# -------------------------------------------------------------------------
resetView = \view \capsule \appState ->
  updateComponent ('.main.view', view, appState)

plugIntoTerminus '$login-clicks', ->
  mapping (resetView 'login_form')

# -------------------------------------------------------------------------
setUserField = (field, val) ->
  "user[#{field}]=#{encodeURIComponent val}"

_getSignupFields =
  ([csrf, signupName, signupEmail, signupPassword, signupConfirmation]) ->
    [
      csrf
      setUserField ('name', signupName)
      setUserField ('email', signupEmail)
      setUserField ('password', signupPassword)
      setUserField ('password_confirmation', signupConfirmation)
    ]

_getSignupData = (signupProperties...) ->
  encodeFormData (_getSignupFields signupProperties)

getSignupData = ->
  doAsync _getSignupData signupProperties...

getSignupPostProperties = ->
  doAsync getAjaxProps ('/users', getSignupData ())

signupProperties =
  [ 'csrf'
    'SignupName'
    'SignupEmail'
    'SignupPassword'
    'SignupConfirmation'
  ].map getProperty

connect '$signup-name-changes', 'SignupName', ->
  mapping (getComponent '.event.target.value')

connect '$signup-email-changes', 'SignupEmail', ->
  mapping (getComponent '.event.target.value')

connect '$signup-password-changes', 'SignupPassword', ->
  mapping (getComponent '.event.target.value')

connect '$signup-confirmation-changes', 'SignupConfirmation', ->
  mapping (getComponent '.event.target.value')

connect '$signup-form-submits', '$ajax-returns', ->
  ; mapping (getSignupPostProperties) posting ;
